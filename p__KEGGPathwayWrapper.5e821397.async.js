(self.webpackChunkrapex_studio=self.webpackChunkrapex_studio||[]).push([[255],{98361:function(q,R,n){"use strict";var v=n(13254),m=n(14277),x=n(2824),K=n(43358),A=n(34041),S=n(96486),F=n.n(S),_=n(67294),y=n(85893),T=A.Z.Option,j,Z;function N(s,e,h){console.log("makeQueryStr filter: ",h);var t=":select [:*]",a="",P="";if(e){var b=Object.keys(e)[0],W=Object.values(e)[0];b&&W&&(W==="ascend"?a=":order-by [:".concat(b,"]"):a=":order-by [[:".concat(b," :desc]]"))}if(s){for(var E=[],I=0,z=Object.keys(s);I<z.length;I++){var G=z[I];["current","pageSize"].indexOf(G)<0&&s[G].length>0&&E.push("[:like [:upper :".concat(G,'] [:upper "%').concat(s[G],'%"]]'))}E.length==1?P=":where ".concat(E[0]):E.length>1&&(P=":where [:or ".concat(E.join(" "),"]"))}return"{".concat(t," ").concat(a," ").concat(P,"}")}var D=function(e){var h=e.queryGenes,t=e.initialValue,a=(0,_.useState)([]),P=(0,x.Z)(a,2),b=P[0],W=P[1],E=(0,_.useState)([]),I=(0,x.Z)(E,2),z=I[0],G=I[1],u=(0,_.useState)(),f=(0,x.Z)(u,2),O=f[0],B=f[1];(0,_.useEffect)(function(){t&&t!==O&&(B(t),M(t,function(c){G(c),C(t,{})}))},[t]);var M=function(r,w){j&&(clearTimeout(j),j=null),Z=r;var o=function(){h({query_str:N({gene_symbol:r,ensembl_id:r,entrez_id:r},{},{})}).then(function(d){if(Z===r){var l=d.data,i=l.map(function(p){return{value:p.ensembl_id,text:"".concat(p.gene_symbol," | ").concat(p.entrez_id," | ").concat(p.ensembl_id)}});w(i),W(l)}}).catch(function(d){console.log("requestDEGs Error: ",d),w([])})};j=setTimeout(o,300)},g=function(r){r?M(r,G):G([])},C=function(r,w){if(B(r),console.log("GeneSearcher handleChange: ",r),r&&typeof r=="string"){var o,Y=(0,S.filter)(b,function(l){return r.match(/ENS/i)?l.ensembl_id==r:r.match(/[a-zA-Z][a-zA-Z0-9]+/i)?l.gene_symbol==r:r.match(/[0-9]+/i)?l.entrez_id.toString()==r:!1});console.log("handleChange(GeneSearcher): ",Y,b),(o=e.onChange)===null||o===void 0||o.call(e,r,Y[0])}else{var d;(d=e.onChange)===null||d===void 0||d.call(e,r,void 0)}},U=z.map(function(c){return(0,y.jsx)(T,{children:c.text},c.value)});return(0,y.jsx)(A.Z,{allowClear:!0,showSearch:!0,value:O,placeholder:e==null?void 0:e.placeholder,style:e.style,defaultActiveFirstOption:!1,showArrow:!0,filterOption:!1,onSearch:g,onChange:C,mode:e!=null&&e.mode?e==null?void 0:e.mode:"single",notFoundContent:(0,y.jsx)(m.Z,{description:"Searching ..."}),children:U})};R.Z=D},44912:function(q,R,n){"use strict";n.r(R),n.d(R,{default:function(){return G}});var v=n(13062),m=n(71230),x=n(34792),K=n(48086),A=n(93224),S=n(2824),F=n(39428),_=n(3182),y=n(8870),T=n(82120),j=n(96486),Z=n(83461),N=n(51615),D=n(67294),s=n(98361),e=n(74310);function h(u,f,O){console.log("makeQueryStr filter: ",O);var B=":select [:*]",M="",g="";if(f){var C=Object.keys(f)[0],U=Object.values(f)[0];C&&U&&(U==="ascend"?M=":order-by [:".concat(C,"]"):M=":order-by [[:".concat(C," :desc]]"))}if(u){for(var c=[],r=0,w=Object.keys(u);r<w.length;r++){var o=w[r];o=="queried_id"&&u[o].length>0&&(u[o].match(/ENS/i)?c.push('[:like [:upper :ensembl_id] [:upper "%'.concat(u[o],'%"]]')):u[o].match(/[a-zA-Z][a-zA-Z0-9]+/i)?c.push('[:like [:upper :gene_symbol] [:upper "%'.concat(u[o],'%"]]')):u[o].match(/[0-9]+/i)&&c.push('[:like [:upper :entrez_id] [:upper "%'.concat(u[o],'%"]]'))),["current","pageSize","queried_id"].indexOf(o)<0&&u[o].length>0&&c.push("[:like [:upper :".concat(o,'] [:upper "%').concat(u[o],'%"]]'))}c.length==1?g=":where ".concat(c[0]):c.length>1&&(g=":where [:and ".concat(c.join(" "),"]"))}return"{".concat(B," ").concat(M," ").concat(g,"}")}var t=n(85893),a=["type","defaultRender"];function P(u){return Promise.resolve((0,y.Z)((0,y.Z)({},u),{},{success:!0,data:(0,j.map)(u.data,function(f){return(0,y.Z)({key:"".concat(f.pathway_id,"_").concat(f.ensembl_id)},f)})}))}var b=function(f){var O=(0,N.k6)(),B=f.queryPathways,M=f.queryGenes,g=f.queryGeneBaseUrl,C=function(){var d=(0,_.Z)((0,F.Z)().mark(function l(i,p,H){var Q;return(0,F.Z)().wrap(function(L){for(;;)switch(L.prev=L.next){case 0:return console.log("requestPathways: ",i,p,H),Q=h(i,p,H),L.next=4,B({page:i.current,page_size:i.pageSize,query_str:Q}).then(function(X){return P(X)}).catch(function(X){return console.log("requestPathways Error: ",X),P({total:0,page:1,page_size:10,data:[]})});case 4:return L.abrupt("return",L.sent);case 5:case"end":return L.stop()}},l)}));return function(i,p,H){return d.apply(this,arguments)}}(),U=(0,D.useRef)(),c=(0,D.useState)([]),r=(0,S.Z)(c,2),w=r[0],o=r[1],Y=[{title:(0,t.jsx)(e._H,{id:"pages.KEGGPathway.pathwayId",defaultMessage:"Pathway ID"}),dataIndex:"pathway_id",sorter:!0,tip:"Each pathway map is identified by the combination of 2-4 letter prefix code and 5 digit number.",render:function(l,i){return(0,t.jsx)("a",{href:"https://www.kegg.jp/entry/".concat(i.pathway_id),rel:"noreferrer",target:"_blank",children:l})}},{title:(0,t.jsx)(e._H,{id:"pages.KEGGPathway.pathwayName",defaultMessage:"Pathway Name"}),align:"center",sorter:!0,dataIndex:"pathway_name",tip:"The name of a KEGG pathway."},{title:(0,t.jsx)(e._H,{id:"pages.KEGGPathway.gene",defaultMessage:"Gene"}),dataIndex:"queried_id",sorter:!0,hideInForm:!0,hideInSetting:!0,hideInTable:!0,fieldProps:{placeholder:"Please input a gene symbol, ensembl id or entrez id."},tip:"Ensembl gene IDs begin with ENS for Ensembl, and then a G for gene.",renderFormItem:function(l,i,p){var H=i.type,Q=i.defaultRender,J=(0,A.Z)(i,a);return H==="form"?null:(0,t.jsx)(s.Z,(0,y.Z)((0,y.Z)({queryGenes:M},J),{},{style:{width:"300px"}}))}},{title:(0,t.jsx)(e._H,{id:"pages.KEGGPathway.geneSymbol",defaultMessage:"Gene Symbol"}),align:"center",hideInSearch:!0,dataIndex:"gene_symbol",sorter:!0,tip:"A gene symbol is a short-form abbreviation for a particular gene.",render:function(l,i){return(0,t.jsx)("a",{onClick:function(){g?O.push("".concat(g).concat(i.ensembl_id)):console.log("You need to set queryGeneBaseUrl.")},children:l})}},{title:(0,t.jsx)(e._H,{id:"pages.KEGGPathway.ensemblId",defaultMessage:"Ensembl ID"}),dataIndex:"ensembl_id",hideInSearch:!0,sorter:!0,tip:"Ensembl gene IDs begin with ENS for Ensembl, and then a G for gene.",render:function(l,i){return(0,t.jsx)("a",{onClick:function(){g?O.push("".concat(g).concat(i.ensembl_id)):console.log("You need to set queryGeneBaseUrl.")},children:l})}},{title:(0,t.jsx)(e._H,{id:"pages.KEGGPathway.entrezId",defaultMessage:"Entrez ID"}),align:"center",sorter:!0,hideInSearch:!0,dataIndex:"entrez_id",tip:"Entrez Gene provides unique integer identifiers for genes and other loci.",render:function(l,i){return(0,t.jsx)("a",{onClick:function(){g?O.push("".concat(g).concat(i.ensembl_id)):console.log("You need to set queryGeneBaseUrl.")},children:l})}}];return(0,t.jsx)(m.Z,{className:"keggpathway",children:(0,t.jsx)(T.Z,{className:"keggpathway__table",actionRef:U,rowKey:"key",search:{labelWidth:120,defaultCollapsed:!1},pagination:{showQuickJumper:!0,position:["topLeft"]},request:C,columns:Y,rowSelection:{onChange:function(l,i){o(i)}},cardBordered:!0,toolbar:{actions:[(0,t.jsx)(Z.CSVLink,{data:w,filename:"download-pathway.csv",onClick:function(){return w.length==0?(K.ZP.warn("Please select records firstly."),!1):!0},children:(0,t.jsx)(e._H,{id:"pages.GeneList.download",defaultMessage:"Download"})})]}})})},W=b,E=n(32266),I=n(10224),z=function(){return(0,t.jsxs)(m.Z,{className:"kegg-pathway-wrapper",children:[(0,t.jsx)(I.Z,{position:"center",title:"Discovery Genes in KEGG Pathway",children:(0,t.jsxs)("p",{children:["This page contains the pathway of the mouse tag and the genes contained in each pathway, and you can use the pathway name, pathway id, or gene id to confirm which pathway the gene you want belongs to.",(0,t.jsx)("br",{}),(0,t.jsx)("b",{children:"Pathway ID:"})," Enter the corresponding pathway ID, which is usually composed of 2-4 letter prefix code and 5 digital number.(e.g. path:mmu00010)",(0,t.jsx)("br",{}),(0,t.jsx)("b",{children:"Pathway Name:"})," You can input he name of a KEGG pathway.",(0,t.jsx)("br",{}),(0,t.jsx)("b",{children:"Gene:"})," Select genes of interest. You can input gene_symbol,ensembl_id or entrez_id to analyze."]})}),(0,t.jsx)(W,{queryPathways:E.dy,queryGenes:E.VX,queryGeneBaseUrl:"/expression-analysis/single-gene?ensemblId="})]})},G=z},32266:function(q,R,n){"use strict";n.d(R,{zn:function(){return A},VX:function(){return y},dy:function(){return j},Ce:function(){return N}});var v=n(39428),m=n(8870),x=n(3182),K=n(74310);function A(s,e){return S.apply(this,arguments)}function S(){return S=(0,x.Z)((0,v.Z)().mark(function s(e,h){return(0,v.Z)().wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.abrupt("return",(0,K.WY)("/api/v1/degs",(0,m.Z)({method:"GET",params:(0,m.Z)({},e)},h||{})));case 1:case"end":return a.stop()}},s)})),S.apply(this,arguments)}function F(s,e){return _.apply(this,arguments)}function _(){return _=_asyncToGenerator(_regeneratorRuntime().mark(function s(e,h){return _regeneratorRuntime().wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.abrupt("return",request("/api/v1/gene-expr-data",_objectSpread({method:"GET",params:_objectSpread({},e)},h||{})));case 1:case"end":return a.stop()}},s)})),_.apply(this,arguments)}function y(s,e){return T.apply(this,arguments)}function T(){return T=(0,x.Z)((0,v.Z)().mark(function s(e,h){return(0,v.Z)().wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.abrupt("return",(0,K.WY)("/api/v1/genes",(0,m.Z)({method:"GET",params:(0,m.Z)({},e)},h||{})));case 1:case"end":return a.stop()}},s)})),T.apply(this,arguments)}function j(s,e){return Z.apply(this,arguments)}function Z(){return Z=(0,x.Z)((0,v.Z)().mark(function s(e,h){return(0,v.Z)().wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.abrupt("return",(0,K.WY)("/api/v1/pathways",(0,m.Z)({method:"GET",params:(0,m.Z)({},e)},h||{})));case 1:case"end":return a.stop()}},s)})),Z.apply(this,arguments)}function N(s,e){return D.apply(this,arguments)}function D(){return D=(0,x.Z)((0,v.Z)().mark(function s(e,h){return(0,v.Z)().wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.abrupt("return",(0,K.WY)("/api/v1/similar-genes",(0,m.Z)({method:"GET",params:(0,m.Z)({},e)},h||{})));case 1:case"end":return a.stop()}},s)})),D.apply(this,arguments)}}}]);
